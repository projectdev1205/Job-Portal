name: Deploy to ECR and Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: job-portal-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Generate Dockerrun.aws.json
        run: |
          cat > Dockerrun.aws.json <<EOF
          {
            "AWSEBDockerrunVersion": 1,
            "Image": {
              "Name": "${{ env.IMAGE }}",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "8000"
              }
            ]
          }
          EOF

      - name: Upload Dockerrun.aws.json to S3
        run: |
          S3_BUCKET="elasticbeanstalk-us-east-2-${{ secrets.AWS_ACCOUNT_ID }}"
          APP_NAME="Job-Portal"
          VERSION_LABEL="app-${GITHUB_RUN_NUMBER}"

          aws s3 cp Dockerrun.aws.json s3://$S3_BUCKET/$APP_NAME/$VERSION_LABEL-Dockerrun.aws.json

          echo "S3_KEY=$APP_NAME/$VERSION_LABEL-Dockerrun.aws.json" >> $GITHUB_ENV
          echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV

      - name: Create new Elastic Beanstalk application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "Job-Portal" \
            --version-label "${{ env.VERSION_LABEL }}" \
            --source-bundle S3Bucket="elasticbeanstalk-us-east-2-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="${{ env.S3_KEY }}" \
            --auto-create-application

      - name: Deploy new version to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "Job-Portal-env" \
            --version-label "${{ env.VERSION_LABEL }}"
